{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documents\\\\GitHub\\\\Campuscrush\\\\src\\\\pages\\\\CompatibilityQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { auth, db } from '../firebase/firebaseConfig';\nimport { doc, setDoc } from 'firebase/firestore';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questions = [{\n  q: \"What's your ideal date?\",\n  options: [\"Movie night\", \"Long walk\", \"Party\", \"Study session\"]\n}, {\n  q: \"Which pet do you prefer?\",\n  options: [\"Dog\", \"Cat\", \"Rabbit\", \"No pets\"]\n}, {\n  q: \"Whatâ€™s your favorite weekend activity?\",\n  options: [\"Gaming\", \"Outing\", \"Reading\", \"Sleeping\"]\n}, {\n  q: \"Are you a morning or night person?\",\n  options: [\"Morning\", \"Night\", \"Both\", \"None\"]\n}, {\n  q: \"How social are you?\",\n  options: [\"Very\", \"Little\", \"Depends\", \"Not at all\"]\n}];\nexport default function CompatibilityQuiz() {\n  _s();\n  const [answers, setAnswers] = useState(Array(questions.length).fill(\"\"));\n  const navigate = useNavigate();\n  const handleAnswerChange = (index, value) => {\n    const updated = [...answers];\n    updated[index] = value;\n    setAnswers(updated);\n  };\n  const handleSubmit = async () => {\n    const user = auth.currentUser;\n    if (!user) return alert(\"Please login first\");\n    if (answers.includes(\"\")) return alert(\"Answer all questions\");\n    const userRef = doc(db, 'users', user.uid);\n    const quizRef = doc(db, 'quizAnswers', user.uid);\n    try {\n      // Save quiz answers\n      await setDoc(quizRef, {\n        uid: user.uid,\n        answers,\n        timestamp: new Date()\n      });\n\n      // Update user's Firestore profile with quiz completion\n      await setDoc(userRef, {\n        hasCompletedQuiz: true\n      }, {\n        merge: true\n      });\n      alert(\"Quiz submitted successfully!\");\n      navigate('/swipe');\n    } catch (error) {\n      console.error(\"Error submitting quiz: \", error);\n      alert(\"Failed to submit quiz. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-xl mx-auto bg-white shadow rounded mt-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-center mb-6\",\n      children: \"\\uD83D\\uDCA1 Compatibility Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), questions.map((q, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-semibold\",\n        children: [i + 1, \". \", q.q]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), q.options.map(opt => /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `q${i}`,\n          value: opt,\n          checked: answers[i] === opt,\n          onChange: () => handleAnswerChange(i, opt),\n          className: \"mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), opt]\n      }, opt, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this))]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      className: \"bg-pink-500 hover:bg-pink-600 text-white px-4 py-2 rounded w-full\",\n      children: \"Submit Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(CompatibilityQuiz, \"cgS/H1wyDmEaLr+g9HNIvHbYTLQ=\", false, function () {\n  return [useNavigate];\n});\n_c = CompatibilityQuiz;\nvar _c;\n$RefreshReg$(_c, \"CompatibilityQuiz\");","map":{"version":3,"names":["React","useState","auth","db","doc","setDoc","useNavigate","jsxDEV","_jsxDEV","questions","q","options","CompatibilityQuiz","_s","answers","setAnswers","Array","length","fill","navigate","handleAnswerChange","index","value","updated","handleSubmit","user","currentUser","alert","includes","userRef","uid","quizRef","timestamp","Date","hasCompletedQuiz","merge","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","i","opt","type","name","checked","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Documents/GitHub/Campuscrush/src/pages/CompatibilityQuiz.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { auth, db } from '../firebase/firebaseConfig';\r\nimport { doc, setDoc } from 'firebase/firestore';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst questions = [\r\n  {\r\n    q: \"What's your ideal date?\",\r\n    options: [\"Movie night\", \"Long walk\", \"Party\", \"Study session\"]\r\n  },\r\n  {\r\n    q: \"Which pet do you prefer?\",\r\n    options: [\"Dog\", \"Cat\", \"Rabbit\", \"No pets\"]\r\n  },\r\n  {\r\n    q: \"Whatâ€™s your favorite weekend activity?\",\r\n    options: [\"Gaming\", \"Outing\", \"Reading\", \"Sleeping\"]\r\n  },\r\n  {\r\n    q: \"Are you a morning or night person?\",\r\n    options: [\"Morning\", \"Night\", \"Both\", \"None\"]\r\n  },\r\n  {\r\n    q: \"How social are you?\",\r\n    options: [\"Very\", \"Little\", \"Depends\", \"Not at all\"]\r\n  }\r\n];\r\n\r\nexport default function CompatibilityQuiz() {\r\n  const [answers, setAnswers] = useState(Array(questions.length).fill(\"\"));\r\n  const navigate = useNavigate();\r\n\r\n  const handleAnswerChange = (index, value) => {\r\n    const updated = [...answers];\r\n    updated[index] = value;\r\n    setAnswers(updated);\r\n  };\r\n\r\n const handleSubmit = async () => {\r\n  const user = auth.currentUser;\r\n  if (!user) return alert(\"Please login first\");\r\n\r\n  if (answers.includes(\"\")) return alert(\"Answer all questions\");\r\n\r\n  const userRef = doc(db, 'users', user.uid);\r\n  const quizRef = doc(db, 'quizAnswers', user.uid);\r\n\r\n  try {\r\n    // Save quiz answers\r\n    await setDoc(quizRef, {\r\n      uid: user.uid,\r\n      answers,\r\n      timestamp: new Date()\r\n    });\r\n\r\n    // Update user's Firestore profile with quiz completion\r\n    await setDoc(userRef, { hasCompletedQuiz: true }, { merge: true });\r\n\r\n    alert(\"Quiz submitted successfully!\");\r\n    navigate('/swipe');\r\n  } catch (error) {\r\n    console.error(\"Error submitting quiz: \", error);\r\n    alert(\"Failed to submit quiz. Please try again.\");\r\n  }\r\n};\r\n  return (\r\n    <div className=\"p-6 max-w-xl mx-auto bg-white shadow rounded mt-8\">\r\n      <h2 className=\"text-2xl font-bold text-center mb-6\">ðŸ’¡ Compatibility Quiz</h2>\r\n      {questions.map((q, i) => (\r\n        <div key={i} className=\"mb-4\">\r\n          <p className=\"font-semibold\">{i + 1}. {q.q}</p>\r\n          {q.options.map(opt => (\r\n            <label key={opt} className=\"block\">\r\n              <input\r\n                type=\"radio\"\r\n                name={`q${i}`}\r\n                value={opt}\r\n                checked={answers[i] === opt}\r\n                onChange={() => handleAnswerChange(i, opt)}\r\n                className=\"mr-2\"\r\n              />\r\n              {opt}\r\n            </label>\r\n          ))}\r\n        </div>\r\n      ))}\r\n      <button\r\n        onClick={handleSubmit}\r\n        className=\"bg-pink-500 hover:bg-pink-600 text-white px-4 py-2 rounded w-full\"\r\n      >\r\n        Submit Quiz\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}