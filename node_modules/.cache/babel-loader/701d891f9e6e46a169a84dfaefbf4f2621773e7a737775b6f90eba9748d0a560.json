{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Documents\\\\GitHub\\\\Campuscrush\\\\src\\\\pages\\\\Chat.js\",\n  _s = $RefreshSig$();\n// src/pages/Chat.js\nimport React, { useEffect, useState } from 'react';\nimport { db, auth } from '../firebase/firebaseConfig';\nimport { collection, query, where, onSnapshot, addDoc, orderBy, doc, getDoc, setDoc, updateDoc, increment } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chat() {\n  _s();\n  const [matchedUsers, setMatchedUsers] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [msgInput, setMsgInput] = useState('');\n  const currentUser = auth.currentUser;\n  useEffect(() => {\n    const fetchMatches = async () => {\n      var _userData$verificatio;\n      const currentUser = auth.currentUser;\n      if (!currentUser) return;\n      const userDoc = await getDoc(doc(db, 'users', currentUser.uid));\n      const userData = userDoc.data();\n\n      // ✅ Restriction for unverified users\n      if (!(userData !== null && userData !== void 0 && (_userData$verificatio = userData.verification) !== null && _userData$verificatio !== void 0 && _userData$verificatio.verified)) {\n        alert(\"Please complete student ID and selfie verification to access chat.\");\n        return;\n      }\n      const likesRef = collection(db, 'likes');\n      const q = query(likesRef, where('from', '==', currentUser.uid));\n      const unsub = onSnapshot(q, async snapshot => {\n        const matchUids = [];\n        const promises = snapshot.docs.map(doc1 => {\n          const toUser = doc1.data().to;\n          const reverseQ = query(likesRef, where('from', '==', toUser), where('to', '==', currentUser.uid));\n          return new Promise(resolve => {\n            onSnapshot(reverseQ, reverseSnap => {\n              reverseSnap.forEach(doc2 => {\n                if (doc2.exists()) {\n                  matchUids.push(toUser);\n                }\n              });\n              resolve();\n            });\n          });\n        });\n        await Promise.all(promises);\n        setMatchedUsers([...new Set(matchUids)]);\n      });\n      return () => unsub();\n    };\n    fetchMatches();\n  }, []);\n  useEffect(() => {\n    if (!selectedChat) return;\n    const chatId = currentUser.uid > selectedChat ? `${currentUser.uid}_${selectedChat}` : `${selectedChat}_${currentUser.uid}`;\n    const q = query(collection(db, 'messages', chatId, 'chat'), orderBy('timestamp'));\n    const unsub = onSnapshot(q, snapshot => {\n      const msgs = snapshot.docs.map(doc => doc.data());\n      setMessages(msgs);\n    });\n    return () => unsub();\n  }, [selectedChat]);\n  const checkAccess = async chatId => {\n    const isMatched = matchedUsers.includes(selectedChat);\n    if (isMatched) return true;\n    const accessDoc = await getDoc(doc(db, 'directAccess', chatId));\n    return accessDoc.exists() && accessDoc.data().allowed;\n  };\n  const sendMessage = async () => {\n    if (!msgInput.trim() || !selectedChat) return;\n    const chatId = currentUser.uid > selectedChat ? `${currentUser.uid}_${selectedChat}` : `${selectedChat}_${currentUser.uid}`;\n    const messageAllowed = await checkAccess(chatId);\n    if (!messageAllowed) {\n      const confirmUseCoin = window.confirm(\"You're not matched. Use 1 coin to send a direct message?\");\n      if (!confirmUseCoin) return;\n\n      // Check coin balance\n      const coinRef = doc(db, 'coins', currentUser.uid);\n      const coinSnap = await getDoc(coinRef);\n      if (!coinSnap.exists() || coinSnap.data().balance < 1) {\n        alert(\"Not enough coins!\");\n        return;\n      }\n\n      // Deduct 1 coin\n      await updateDoc(coinRef, {\n        balance: increment(-1)\n      });\n\n      // Allow future access\n      await setDoc(doc(db, 'directAccess', chatId), {\n        allowed: true\n      });\n    }\n\n    // Send the message\n    await addDoc(collection(db, 'messages', chatId, 'chat'), {\n      from: currentUser.uid,\n      to: selectedChat,\n      text: msgInput,\n      timestamp: new Date()\n    });\n    setMsgInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col md:flex-row h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full md:w-1/3 p-4 border-r overflow-y-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-bold mb-4\",\n        children: \"Matches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), matchedUsers.map(uid => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setSelectedChat(uid),\n        className: `p-2 cursor-pointer hover:bg-pink-100 ${selectedChat === uid ? 'bg-pink-200' : ''}`,\n        children: uid\n      }, uid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full md:w-2/3 p-4 flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 overflow-y-auto border rounded p-2 mb-4 bg-white\",\n        children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `p-2 my-1 rounded ${msg.from === currentUser.uid ? 'text-right bg-pink-100' : 'text-left bg-gray-100'}`,\n          children: msg.text\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), selectedChat && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"flex-1 p-2 border rounded-l\",\n          value: msgInput,\n          onChange: e => setMsgInput(e.target.value),\n          placeholder: \"Type a message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          className: \"bg-pink-500 text-white px-4 rounded-r\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"e0cRdrWGgRS085FNtK+ggecpWfM=\");\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","db","auth","collection","query","where","onSnapshot","addDoc","orderBy","doc","getDoc","setDoc","updateDoc","increment","jsxDEV","_jsxDEV","Chat","_s","matchedUsers","setMatchedUsers","selectedChat","setSelectedChat","messages","setMessages","msgInput","setMsgInput","currentUser","fetchMatches","_userData$verificatio","userDoc","uid","userData","data","verification","verified","alert","likesRef","q","unsub","snapshot","matchUids","promises","docs","map","doc1","toUser","to","reverseQ","Promise","resolve","reverseSnap","forEach","doc2","exists","push","all","Set","chatId","msgs","checkAccess","isMatched","includes","accessDoc","allowed","sendMessage","trim","messageAllowed","confirmUseCoin","window","confirm","coinRef","coinSnap","balance","from","text","timestamp","Date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","msg","idx","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Documents/GitHub/Campuscrush/src/pages/Chat.js"],"sourcesContent":["// src/pages/Chat.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { db, auth } from '../firebase/firebaseConfig';\r\nimport {\r\n  collection,\r\n  query,\r\n  where,\r\n  onSnapshot,\r\n  addDoc,\r\n  orderBy,\r\n  doc,\r\n  getDoc,\r\n  setDoc,\r\n  updateDoc,\r\n  increment,\r\n} from 'firebase/firestore';\r\n\r\nexport default function Chat() {\r\n  const [matchedUsers, setMatchedUsers] = useState([]);\r\n  const [selectedChat, setSelectedChat] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [msgInput, setMsgInput] = useState('');\r\n\r\n  const currentUser = auth.currentUser;\r\n\r\n  useEffect(() => {\r\n    const fetchMatches = async () => {\r\n     const currentUser = auth.currentUser;\r\n    if (!currentUser) return;\r\n\r\n    const userDoc = await getDoc(doc(db, 'users', currentUser.uid));\r\n    const userData = userDoc.data();\r\n\r\n    // ✅ Restriction for unverified users\r\n    if (!userData?.verification?.verified) {\r\n      alert(\"Please complete student ID and selfie verification to access chat.\");\r\n      return;\r\n    }\r\n\r\n    const likesRef = collection(db, 'likes');\r\n    const q = query(likesRef, where('from', '==', currentUser.uid));\r\n\r\n    const unsub = onSnapshot(q, async snapshot => {\r\n      const matchUids = [];\r\n\r\n      const promises = snapshot.docs.map(doc1 => {\r\n        const toUser = doc1.data().to;\r\n        const reverseQ = query(\r\n          likesRef,\r\n          where('from', '==', toUser),\r\n          where('to', '==', currentUser.uid)\r\n        );\r\n\r\n        return new Promise(resolve => {\r\n          onSnapshot(reverseQ, reverseSnap => {\r\n            reverseSnap.forEach(doc2 => {\r\n              if (doc2.exists()) {\r\n                matchUids.push(toUser);\r\n              }\r\n            });\r\n            resolve();\r\n          });\r\n        });\r\n      });\r\n\r\n      await Promise.all(promises);\r\n      setMatchedUsers([...new Set(matchUids)]);\r\n    });\r\n\r\n    return () => unsub();\r\n  };\r\n\r\n  fetchMatches();\r\n}, []);\r\n\r\n  useEffect(() => {\r\n    if (!selectedChat) return;\r\n\r\n    const chatId =\r\n      currentUser.uid > selectedChat\r\n        ? `${currentUser.uid}_${selectedChat}`\r\n        : `${selectedChat}_${currentUser.uid}`;\r\n\r\n    const q = query(\r\n      collection(db, 'messages', chatId, 'chat'),\r\n      orderBy('timestamp')\r\n    );\r\n\r\n    const unsub = onSnapshot(q, snapshot => {\r\n      const msgs = snapshot.docs.map(doc => doc.data());\r\n      setMessages(msgs);\r\n    });\r\n\r\n    return () => unsub();\r\n  }, [selectedChat]);\r\n\r\n  const checkAccess = async (chatId) => {\r\n    const isMatched = matchedUsers.includes(selectedChat);\r\n    if (isMatched) return true;\r\n\r\n    const accessDoc = await getDoc(doc(db, 'directAccess', chatId));\r\n    return accessDoc.exists() && accessDoc.data().allowed;\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (!msgInput.trim() || !selectedChat) return;\r\n\r\n    const chatId =\r\n      currentUser.uid > selectedChat\r\n        ? `${currentUser.uid}_${selectedChat}`\r\n        : `${selectedChat}_${currentUser.uid}`;\r\n\r\n    const messageAllowed = await checkAccess(chatId);\r\n\r\n    if (!messageAllowed) {\r\n      const confirmUseCoin = window.confirm(\r\n        \"You're not matched. Use 1 coin to send a direct message?\"\r\n      );\r\n\r\n      if (!confirmUseCoin) return;\r\n\r\n      // Check coin balance\r\n      const coinRef = doc(db, 'coins', currentUser.uid);\r\n      const coinSnap = await getDoc(coinRef);\r\n\r\n      if (!coinSnap.exists() || coinSnap.data().balance < 1) {\r\n        alert(\"Not enough coins!\");\r\n        return;\r\n      }\r\n\r\n      // Deduct 1 coin\r\n      await updateDoc(coinRef, {\r\n        balance: increment(-1),\r\n      });\r\n\r\n      // Allow future access\r\n      await setDoc(doc(db, 'directAccess', chatId), { allowed: true });\r\n    }\r\n\r\n    // Send the message\r\n    await addDoc(collection(db, 'messages', chatId, 'chat'), {\r\n      from: currentUser.uid,\r\n      to: selectedChat,\r\n      text: msgInput,\r\n      timestamp: new Date(),\r\n    });\r\n\r\n    setMsgInput('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col md:flex-row h-screen\">\r\n      <div className=\"w-full md:w-1/3 p-4 border-r overflow-y-auto\">\r\n        <h2 className=\"text-lg font-bold mb-4\">Matches</h2>\r\n        {matchedUsers.map(uid => (\r\n          <div\r\n            key={uid}\r\n            onClick={() => setSelectedChat(uid)}\r\n            className={`p-2 cursor-pointer hover:bg-pink-100 ${\r\n              selectedChat === uid ? 'bg-pink-200' : ''\r\n            }`}\r\n          >\r\n            {uid}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"w-full md:w-2/3 p-4 flex flex-col\">\r\n        <div className=\"flex-1 overflow-y-auto border rounded p-2 mb-4 bg-white\">\r\n          {messages.map((msg, idx) => (\r\n            <div\r\n              key={idx}\r\n              className={`p-2 my-1 rounded ${\r\n                msg.from === currentUser.uid\r\n                  ? 'text-right bg-pink-100'\r\n                  : 'text-left bg-gray-100'\r\n              }`}\r\n            >\r\n              {msg.text}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {selectedChat && (\r\n          <div className=\"flex\">\r\n            <input\r\n              className=\"flex-1 p-2 border rounded-l\"\r\n              value={msgInput}\r\n              onChange={e => setMsgInput(e.target.value)}\r\n              placeholder=\"Type a message\"\r\n            />\r\n            <button\r\n              onClick={sendMessage}\r\n              className=\"bg-pink-500 text-white px-4 rounded-r\"\r\n            >\r\n              Send\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}